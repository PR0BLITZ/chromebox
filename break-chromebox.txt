=================================================
Turn OS Verification Off -------------- + + +
========================
- Power off machine 
- Hold recovery button 
  (Requires a bent paperclip to press and hold down) 
- CTRL + D   (Developer mode) 
- ESC?     (You'll hear beeps, loud) 
- Reboot
- CTRL + L   ( 2 beeps, loud)
- Hold CTRL + ALT + F2 (Wait until after 2 beeps) 

You should see a console. 
Note: scrolling is not available (as far as I know, yet) on the console screen; however, the arrow keys U/D/L/R work for navigation 
Source: https://docs.mrchromebox.tech/docs/boot-modes/developer.html
------------------------------------------------------------------
login = chronos (Be quick! If the developer screen cuts out on you, you can always use the previous keys to get back to it on the login screen) 
(optional, informational) uname -a
(optional, informational) ip a
sudo initctl stop powerd (Instructions available on dev screen 
sudo su -  (Passwordless root auth) 
crossystem dev_boot_altfw=1  (This enables the Legasy Boot Mode / Alternative Bootloader (AltFw) and will provide a method to allow alternate OS booting. Exciting!) 

==================================================
Disable Write-Protection -------------- + + +
========================
First, determine which of the following devices matches yours: https://docs.mrchromebox.tech/docs/supported-devices.html 
I have an ASUS Chromebox 3, so I have two methods of hardware modification: CR50 (SuzyQ), or "screw" ... Hm, this looks like a project for the daytime, and on a spacious surface... 

WIP

===================================================
Alternate OS Configuration -------------- + + +
==========================
Source: https://docs.mrchromebox.tech/docs/fwscript.html
Goal: dual-boot Chromebox with ChromeOS and Arch Linux (let's hope this thing can handle it!) 
------------------------------------------------------------------
exit (Leave root escalation)
ensure you are at ~ (It's the default when exiting root, but just in case, "cd ~ ")
curl -LO mrchromebox.tech/firmware-util.sh && sudo bash firmware-util.sh
Choose "Install/Update RW_LEGACY Firmware" 
Select 'L' for Legacy BIOS 
N for leaving as CTRL + L requirement (for now) 

(Hm, currently stuck on WP being enabled still...) see the section above, since this is likely something that should happen before OS config. Unsuure if there's a way to do this via CLI. Will look into this. 
'R' for reboot
CTRL + L 


Interesting notes: 
- Chromeboxes store their Ethernet MAC address in the RO_VPD (read-only vital product data) region of the stock firmware. 
- neofetch for Arch ASCII




